services:
  # Kong Database
  kong-database:
    image: postgres:15-alpine
    container_name: kong-database
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-data:/var/lib/postgresql/data
    networks:
      - kong-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Kong Migration
  kong-migration:
    image: kong:3.5
    container_name: kong-migration
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - kong-network
    restart: on-failure

  # Kong Gateway
  kong:
    image: kong:3.5
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    depends_on:
      kong-migration:
        condition: service_completed_successfully
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin API
      - "8443:8443"  # Proxy SSL
      - "8444:8444"  # Admin SSL
    networks:
      - kong-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Kong Dashboard
  kong-dashboard:
    image: pgbi/kong-dashboard:latest
    container_name: kong-dashboard
    environment:
      KONG_DASHBOARD_CONFIG: /etc/kong-dashboard/kong-dashboard.yml
    volumes:
      - ./kong/kong-dashboard.yml:/etc/kong-dashboard/kong-dashboard.yml
    ports:
      - "8080:8080"
    depends_on:
      - kong
    networks:
      - kong-network
    restart: unless-stopped

  # Kong Auth Service
  kong-auth:
    build: .
    container_name: kong-auth
    ports:
      - "${PORT:-8002}:8000"
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - RELOAD=true
    volumes:
      - .:/app
    depends_on:
      - kong
    networks:
      - kong-network
    restart: unless-stopped

volumes:
  kong-data:

networks:
  kong-network:
    driver: bridge 